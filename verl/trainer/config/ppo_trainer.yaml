data:
  tokenizer: null
  train_files: ~/data/rlhf/gsm8k/train.parquet
  val_files: ~/data/rlhf/gsm8k/test.parquet
  prompt_key: prompt
  max_prompt_length: 512
  max_response_length: 1024
  train_batch_size: 64
  val_batch_size: 32
  return_raw_input_ids: False  # This should be set to true when the tokenizer between policy and rm differs
  return_raw_chat: False
  shuffle: True

actor_rollout_ref:
  hybrid_engine: True
  model:
    path: ~/models/deepseek-llm-7b-chat
    external_lib: null
    override_config: { }
    enable_gradient_checkpointing: True
    use_remove_padding: False
  actor:
    use_lora: False  # Enable LoRA
    lora_r: 8  # LoRA rank
    lora_alpha: 32 # LoRA alpha
    lora_dropout: 0.05 # LoRA dropout
    lora_target_modules: # Target modules for LoRA
      - q_proj
      - v_proj
    strategy: fsdp  # This is for backward-compatibility (fsdp for Fully Sharded Data Parallelism)
    ppo_mini_batch_size: 16 # Typically, train_batch_size is larger than or equal to ppo_mini_batch_size. Smaller mini-batches can lead to more frequent updates and potentially faster learning, but they can also be more noisy. 
    ppo_micro_batch_size: null # will be deprecated, use ppo_micro_batch_size_per_gpu
    ppo_micro_batch_size_per_gpu: 4 # 当处理大模型时，可能无法一次性将所有数据放入 GPU，因此需要将 mini-batch 进一步分割成更小的 micro-batch
    use_dynamic_bsz: False
    ppo_max_token_len_per_gpu: ${actor_rollout_ref.rollout.n} * ${data.max_prompt_length} + ${data.max_response_length} # n * ${data.max_prompt_length} + ${data.max_response_length} (n is number of candidate responses)
    grad_clip: 1.0
    clip_ratio: 0.2
    entropy_coeff: 0.001
    use_kl_loss: False # True for GRPO
    kl_loss_coef: 0.001 # for grpo
    kl_loss_type: low_var_kl # for grpo
    ppo_epochs: 1 # PPO processes the mini-batch multiple times, as determined by ppo_epochs.
    shuffle: False
    ulysses_sequence_parallel_size: 1 # sp size sequence parallelism splits the input sequence.
    optim:
      lr: 1e-6
      lr_warmup_steps_ratio: 0.  # the total steps will be injected during runtime
      min_lr_ratio: null   # only useful for warmup with cosine
      warmup_style: constant  # select from constant/cosine
      total_training_steps: -1  # must be override by program
    fsdp_config:
      use_orig_params: ${actor_rollout_ref.actor.use_lora}  # Allow different requires_grad states
      wrap_policy:
        # transformer_layer_cls_to_wrap: None
        min_num_params: 0
      param_offload: False
      grad_offload: False
      optimizer_offload: False
      fsdp_size: -1
  ref:
    fsdp_config:
      use_orig_params: False  # Allow different requires_grad states
      param_offload: False
      wrap_policy:
        # transformer_layer_cls_to_wrap: None
        min_num_params: 0
    log_prob_micro_batch_size: null # will be deprecated, use log_prob_micro_batch_size_per_gpu
    log_prob_micro_batch_size_per_gpu: 4  # 设置为与ppo_micro_batch_size_per_gpu相同的值
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}
    ulysses_sequence_parallel_size: ${actor_rollout_ref.actor.ulysses_sequence_parallel_size} # sp size
  rollout:
    name: our_vllm
    temperature: 1.0
    top_k: -1 # 0 for hf rollout, -1 for vllm rollout
    top_p: 1
    prompt_length: ${data.max_prompt_length}  # not use for opensource
    response_length: ${data.max_response_length}
    # for vllm rollout
    dtype: float16 # should align with FSDP (bfloat16)
    gpu_memory_utilization: 0.5
    ignore_eos: False
    enforce_eager: True
    free_cache_engine: True
    load_format: dummy_dtensor
    tensor_model_parallel_size: 4 # Tensor parallelism splits the model's layers
    swap_space: 8
    max_num_batched_tokens: 2048
    micro_rollout_batch_size: 2
    max_num_seqs: 32
    model_path: ${actor_rollout_ref.model.path}
    log_prob_micro_batch_size: null # will be deprecated, use log_prob_micro_batch_size_per_gpu
    log_prob_micro_batch_size_per_gpu: 2  # 设置为与ppo_micro_batch_size_per_gpu相同的值
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}
    disable_log_stats: True
    enable_chunked_prefill: True # could get higher throughput
    # for hf rollout
    do_sample: True
    # number of responses (i.e. num sample times)
    n: 4 # > 1 for grpo

critic:
  strategy: fsdp
  optim:
    lr: 1e-5
    lr_warmup_steps_ratio: 0.  # the total steps will be injected during runtime
    min_lr_ratio: null   # only useful for warmup with cosine
    warmup_style: constant  # select from constant/cosine
    total_training_steps: -1  # must be override by program
  model:
    path: ~/models/deepseek-llm-7b-chat
    tokenizer_path: ${actor_rollout_ref.model.path}
    override_config: { }
    external_lib: ${actor_rollout_ref.model.external_lib}
    enable_gradient_checkpointing: True
    use_remove_padding: False
    fsdp_config:
      use_orig_params: False  # Allow different requires_grad states
      param_offload: False
      grad_offload: False
      optimizer_offload: False
      wrap_policy:
        # transformer_layer_cls_to_wrap: None
        min_num_params: 0
      fsdp_size: -1
  ppo_mini_batch_size: ${actor_rollout_ref.actor.ppo_mini_batch_size}
  ppo_micro_batch_size: null # will be deprecated, use ppo_micro_batch_size_per_gpu
  ppo_micro_batch_size_per_gpu: null
  forward_micro_batch_size: ${critic.ppo_micro_batch_size}
  forward_micro_batch_size_per_gpu: ${critic.ppo_micro_batch_size_per_gpu}
  use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
  ppo_max_token_len_per_gpu: (${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}) * 2 # (${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}) * 2
  forward_max_token_len_per_gpu: ${critic.ppo_max_token_len_per_gpu}
  ulysses_sequence_parallel_size: 1 # sp size
  ppo_epochs: ${actor_rollout_ref.actor.ppo_epochs}
  shuffle: ${actor_rollout_ref.actor.shuffle}
  grad_clip: 1.0
  cliprange_value: 0.5

reward_model:
  enable: False
  strategy: fsdp
  model:
    input_tokenizer: ${actor_rollout_ref.model.path}  # set this to null if the chat template is identical
    path: ~/models/FsfairX-LLaMA3-RM-v0.1
    external_lib: ${actor_rollout_ref.model.external_lib}
    use_remove_padding: False
    fsdp_config:
      use_orig_params: False  # Allow different requires_grad states
      min_num_params: 0
      param_offload: False
      fsdp_size: -1
  micro_batch_size: null # will be deprecated, use micro_batch_size_per_gpu
  micro_batch_size_per_gpu: null # set a number
  max_length: null
  ulysses_sequence_parallel_size: 1 # sp size
  use_dynamic_bsz: ${critic.use_dynamic_bsz}
  forward_max_token_len_per_gpu: ${critic.forward_max_token_len_per_gpu}

algorithm:
  gamma: 1.0
  lam: 1.0
  adv_estimator: grpo #  or gae
  kl_penalty: kl  # how to estimate kl divergence
  kl_ctrl:
    type: fixed
    kl_coef: 0.001

trainer:
  total_epochs: 1
  total_training_steps: null
  project_name: verl_examples
  experiment_name: gsm8k
  logger: [ 'console', 'wandb' ]
  nnodes: 4
  n_gpus_per_node: 2
  save_freq: -1
  # auto: find the last ckpt to resume. If can't find, start from scratch
  resume_mode: auto # or auto or resume_path if 
  resume_from_path: False
  test_freq: -1
  critic_warmup: 0
  remove_clip: False
  default_hdfs_dir: null
  default_local_dir: checkpoints/${trainer.project_name}/${trainer.experiment_name}
  remove_previous_ckpt: True
  val_before_train: True   # Controla si se ejecuta la validación antes del entrenamiento
  val_sample_size: -1      # Número de muestras a usar para la validación. -1 para usar el dataset completo.


# <<< 新增部分开始 >>>
reward_manager:
  ema_alpha: 0.7
  indicator_names: ['Response Entropy 1 diff 2', 'Response Entropy 1 diff', 'Response Entropy 1']
  weights: [1.0, 0.25, 0.0625] # 1, 1/4, 1/16
  weights_exploit: [1.0, 0.01, 0.001] # 1.0, 1e-2, 1e-3
  add_reward: True
  modulation_gain: 1.5
  aux_reward_global_weight: 1.0
  token_level_baseline_type: 'internal_mean' # 可选值: 'internal_mean' (新思路) 或 'external_ema' (老办法)

calculator:
  # Stride para el cálculo de diferencias en las métricas de representación.
  diff_stride: 20
  enable: True
  compute_log_effective_rank: False
  metric_indices: [0, 1, 2]
  output_token_level_metrics: False # If True, the calculator will output token-level metrics.
  